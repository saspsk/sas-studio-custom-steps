{"creationTimeStamp":"2024-01-26T04:42:35.277Z","modifiedTimeStamp":"2024-02-02T08:06:51.751Z","createdBy":"peisin.khoo@sas.com","modifiedBy":"peisin.khoo@sas.com","name":"NLP - Design LLM Prompt.step","displayName":"NLP - Design LLM Prompt.step","localDisplayName":"NLP - Design LLM Prompt.step","properties":{},"links":[{"method":"GET","rel":"self","href":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","uri":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","type":"application/vnd.sas.data.flow.step"},{"method":"GET","rel":"alternate","href":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","uri":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","type":"application/vnd.sas.data.flow.step.summary"},{"method":"GET","rel":"up","href":"/dataFlows/steps","uri":"/dataFlows/steps","type":"application/vnd.sas.collection","itemType":"application/vnd.sas.data.flow.step.summary"},{"method":"PUT","rel":"update","href":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","uri":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","type":"application/vnd.sas.data.flow.step","responseType":"application/vnd.sas.data.flow.step"},{"method":"DELETE","rel":"delete","href":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","uri":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc"},{"method":"GET","rel":"transferExport","href":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","uri":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","responseType":"application/vnd.sas.transfer.object"},{"method":"PUT","rel":"transferImportUpdate","href":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","uri":"/dataFlows/steps/848fceaf-9619-488d-8c8a-2d12821c58fc","type":"application/vnd.sas.transfer.object","responseType":"application/vnd.sas.summary"}],"metadataVersion":0.0,"version":2,"type":"code","flowMetadata":{"inputPorts":[{"name":"llms_input_table","displayName":"llms_input_table","localDisplayName":"llms_input_table","minEntries":1,"maxEntries":1,"defaultEntries":0,"type":"table"}],"outputPorts":[]},"ui":"{\n\t\"showPageContentOnly\": true,\n\t\"pages\": [\n\t\t{\n\t\t\t\"id\": \"page1\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Parameters\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section2\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Prompt Designer\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text2\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Provide the input data for the model.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_input_source\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Specify input data source\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"table\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Choose a table\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"enter\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Enter manually\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section4\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input table\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$llms_input_source\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"table\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"llms_input_table\",\n\t\t\t\t\t\t\t\t\t\"type\": \"inputtable\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Input table:\",\n\t\t\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\t\t\"$llms_input_source\",\n\t\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\t\"table\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"llms_input_key\",\n\t\t\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Select the key column:\",\n\t\t\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\t\t\"columntype\": \"n\",\n\t\t\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\t\t\"$llms_input_source\",\n\t\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\t\"table\"\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"readonly\": false,\n\t\t\t\t\t\t\t\t\t\"table\": \"llms_input_table\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"llms_input_text\",\n\t\t\t\t\t\t\t\t\t\"type\": \"columnselector\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Select the text column:\",\n\t\t\t\t\t\t\t\t\t\"order\": false,\n\t\t\t\t\t\t\t\t\t\"columntype\": \"c\",\n\t\t\t\t\t\t\t\t\t\"max\": 1,\n\t\t\t\t\t\t\t\t\t\"min\": 1,\n\t\t\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\t\t\"$llms_input_source\",\n\t\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\t\"table\"\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\"readonly\": false,\n\t\t\t\t\t\t\t\t\t\"table\": \"llms_input_table\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section5\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Enter manually\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$llms_input_source\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"enter\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"llms_input_textarea\",\n\t\t\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Enter the content here\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\t\t\"$llms_input_source\",\n\t\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\t\"enter\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text2_1\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Provide a context for a better response.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_context_source\",\n\t\t\t\t\t\t\t\"type\": \"dropdown\",\n\t\t\t\t\t\t\t\"label\": \"Specify context source\",\n\t\t\t\t\t\t\t\"items\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"value\": \"enter\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Enter manually\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section7\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input table\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$llms_context_source\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"table\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"children\": []\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section6\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Enter manually\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\"$llms_context_source\",\n\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\"enter\"\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"llms_context_textarea\",\n\t\t\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\t\t\"label\": \"Enter the content here\",\n\t\t\t\t\t\t\t\t\t\"placeholder\": \"For more complex tasks, user can utilize few-shot prompting to enable in-context learning.\",\n\t\t\t\t\t\t\t\t\t\"required\": false,\n\t\t\t\t\t\t\t\t\t\"visible\": [\n\t\t\t\t\t\t\t\t\t\t\"$llms_context_source\",\n\t\t\t\t\t\t\t\t\t\t\"=\",\n\t\t\t\t\t\t\t\t\t\t\"enter\"\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text1\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Provide the instruction or task for the model.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_task_textarea\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Enter the content here\",\n\t\t\t\t\t\t\t\"placeholder\": \" (new line separated)\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text1_1\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"Design your prompt.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_prompt_textarea\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Use $input, $task, $context where applicable\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"page2\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"Configuration\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section1\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Large Language Model\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_api_endpoint\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Rest endpoint for the Large Language Model (LLM)\",\n\t\t\t\t\t\t\t\"placeholder\": \"\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_include_credentials\",\n\t\t\t\t\t\t\t\"type\": \"checkbox\",\n\t\t\t\t\t\t\t\"label\": \"Include request headers\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_api_credentials_filepath\",\n\t\t\t\t\t\t\t\"type\": \"path\",\n\t\t\t\t\t\t\t\"label\": \"Select JSON file that contains the headers. JSON file needs to reside in SAS Server\",\n\t\t\t\t\t\t\t\"pathtype\": \"file\",\n\t\t\t\t\t\t\t\"placeholder\": \"sasserver:<>\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"$llms_include_credentials\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"llms_request_body\",\n\t\t\t\t\t\t\t\"type\": \"textarea\",\n\t\t\t\t\t\t\t\"label\": \"Enter request body in JSON format. Use $prompt to indicate where to store the value of the formulated prompt\",\n\t\t\t\t\t\t\t\"placeholder\": \"{\\n    \\\"model\\\": \\\"gpt-3.5-turbo\\\",\\n    \\\"messages\\\": [{\\n        \\\"role\\\": \\\"user\\\",\\n        \\\"content\\\": \\\"$prompt\\\"\\n      }]\\n  }\",\n\t\t\t\t\t\t\t\"required\": true,\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"id\": \"about\",\n\t\t\t\"type\": \"page\",\n\t\t\t\"label\": \"About\",\n\t\t\t\"children\": [\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_description\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"NLP - Design LLM Prompt\\n===================\\n\\nThis custom step allows users to customize their prompts for a language model to generate desired responses.\\n \\nPrompt engineering is a technique to guide LLMs (Large Language Model) like GPT (Generative Pre-trained Transformer) to generate desired outcomes for specific tasks without the need to fine-tune the model.\\n\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_parameters\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Parameters\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"parameters_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"This custom step runs on data found in the compute library only. \\n\\nYou can customize the elements that make up a prompt but do not have to specify all. The final format of the prompt would depend on the task at hand.\\n\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section3\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Input Parameters\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"text3\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"1. Input data should contain the data you would like to generate a response on. This is an optional field. \\n\\nThe source of the input data could be a table, entered manually or left blank. When table is chosen as a source, please select an input table from your connected compute libraries. Refer to the Libraries menu on the left hand side to locate all available libraries. The chosen input table should include a unique idenitifier column and at least one text column.\\n\\n2. Context should include any additional or external information that would allow the model to genrate a better response. This is an optional field.\\n\\nOne technique you can employ here is few shot prompting where user can give examples of how the model should response. \\n\\n3. Instruction/task refers to what the user wants the model to perform.\\n\\n4. Prompt Design is the area where the user put together \\n\\ni. input data represented by $input \\nii. context represented by $context \\niii. instruction/task represented by $task \\n\\nto come up with the final prompt for the model. A well-crafted prompt can improve the quality of responses from the model. \\n\\n**Note: Please make sure the context window is within the token limits of the model used.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"section9\",\n\t\t\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\t\t\"label\": \"Output Specifications\",\n\t\t\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\"id\": \"text5\",\n\t\t\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\t\t\"text\": \"Since the output from the LLM is in a JSON structure, this step uses the JSON libname engine to surface contents as SAS datasets. We have provided a predefined name of JLIB for the SAS library based on the JSON engine.\\n\\nAfter the step runs successfully, refer to the Libraries menu on the left hand side to locate this library and access the result dataset.  Note that in case of a nested JSON response, you might encounter additional datasets for different keys of the JSON object.\\n\\nAlso, note that our choice of JSON libname for the output dataset means that there is no requirement to attach an output table port to this custom step.  Users may edit the step to add an output port purely for linking purposes when using the step inside a SAS Studio Flow.\",\n\t\t\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"section8\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Configuration\",\n\t\t\t\t\t\"open\": true,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"text4\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"This custom step only supports REST API calls and makes a POST request to the LLM service. \\n\\nThe request body should include the final prompt design ($prompt) in a format required by the LLM service.\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"about_documentation\",\n\t\t\t\t\t\"type\": \"section\",\n\t\t\t\t\t\"label\": \"Documentation\",\n\t\t\t\t\t\"open\": 0,\n\t\t\t\t\t\"visible\": \"\",\n\t\t\t\t\t\"children\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"id\": \"documentation_text\",\n\t\t\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\t\t\"text\": \"For more information on Prompt Engineering, please refer to https://www.promptingguide.ai\",\n\t\t\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"version_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Version: 1.2  (02FEB2024)\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"id\": \"contact_text\",\n\t\t\t\t\t\"type\": \"text\",\n\t\t\t\t\t\"text\": \"Contact: Peisin Khoo (peisin.khoo@sas.com)\\n\",\n\t\t\t\t\t\"visible\": \"\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t],\n\t\"syntaxversion\": \"1.3.0\",\n\t\"values\": {\n\t\t\"llms_input_source\": null,\n\t\t\"llms_input_table\": {\n\t\t\t\"library\": \"\",\n\t\t\t\"table\": \"\"\n\t\t},\n\t\t\"llms_input_key\": [],\n\t\t\"llms_input_text\": [],\n\t\t\"llms_input_textarea\": \"\",\n\t\t\"llms_context_source\": null,\n\t\t\"llms_context_textarea\": \"\",\n\t\t\"llms_task_textarea\": \"\",\n\t\t\"llms_prompt_textarea\": \"\",\n\t\t\"llms_api_endpoint\": \"http(s)://<>\",\n\t\t\"llms_include_credentials\": false,\n\t\t\"llms_api_credentials_filepath\": \"\",\n\t\t\"llms_request_body\": \"{\\n    \\\"model\\\": \\\"gpt-3.5-turbo\\\",\\n    \\\"messages\\\": [{\\n        \\\"role\\\": \\\"user\\\",\\n        \\\"content\\\": \\\"$prompt\\\"\\n      }]\\n  }\"\n\t}\n}","templates":{"SAS":"/*-----------------------------------------------------------------------------------------*\n   START MACRO DEFINITIONS.\n*------------------------------------------------------------------------------------------*/\n\n/* -----------------------------------------------------------------------------------------* \n   Error flag for capture during code execution.\n*------------------------------------------------------------------------------------------ */\n\n%global _llms_error_flag;\n%let _llms_error_flag=0;\n\n/* -----------------------------------------------------------------------------------------* \n   Global macro variable for the trigger to run this custom step. A value of 1 \n   (the default) enables this custom step to run.  A value of 0 (provided by upstream code)\n   sets this to disabled.\n*------------------------------------------------------------------------------------------ */\n\n%global _llms_run_trigger;\n\n%if %sysevalf(%superq(_llms_run_trigger)=, boolean)  %then %do;\n\n\t%put NOTE: Trigger macro variable _llms_run_trigger does not exist. Creating it now.;\n    %let _llms_run_trigger=1;\n\n%end;\n\n/*-----------------------------------------------------------------------------------------*\n   MAIN EXECUTION CODE\n   Note: Python code blocks follow different indentation logic and are currently not\n   indented within the SAS proc python blocks below. Comments may not be rendered as \n   elegantly as SAS code.\n*------------------------------------------------------------------------------------------*/\n\nproc python;\n\nsubmit;\n\n#############################################################################################\n#\n#  Imports\n#\n#############################################################################################\n\nimport re\nimport pandas as pd\nimport aiohttp\nimport asyncio\nfrom datetime import datetime\nimport json\n\n#############################################################################################\n#\n#  Early termination flags\n#\n#############################################################################################\n\n#run_trigger = int(SAS.symget(\"_llm_run_trigger\"))\nerror_flag = int(SAS.symget(\"_llms_error_flag\"))\n\n#############################################################################################\n#\n#  Obtain values from UI - Part 1\n#\n#############################################################################################\n\ninput_source = SAS.symget(\"llms_input_source\")\ncontext_source = SAS.symget(\"llms_context_source\")\ntask = SAS.symget(\"llms_task_textarea\")\nprompt = SAS.symget(\"llms_prompt_textarea\")\n\napi_endpoint = SAS.symget(\"llms_api_endpoint\")\nheaders = {}\nheaders_filepath = SAS.symget(\"llms_api_credentials_filepath\")\npayload = SAS.symget(\"llms_request_body\")\n\n#############################################################################################\n#\n#  Validate format of prompt body and make sure $input, $task, $context is/are specified where required.\n#\n#############################################################################################\n\nif error_flag == 0:\n    if input_source and \"$input\" not in prompt.lower():\n        SAS.logMessage(\"Missing $input in your prompt body.\", \"ERROR\")\n        error_flag = 1\n    if context_source and \"$context\" not in prompt.lower():\n        SAS.logMessage(\"Missing $context in your prompt body.\", \"ERROR\")\n        error_flag = 1\n    if prompt and \"$task\" not in prompt.lower():\n        SAS.logMessage(\"Missing $task in your prompt body.\", \"ERROR\")\n        error_flag = 1\n\n#############################################################################################\n#\n#  Validate JSON format of request body and make sure $prompt is specified in the body.\n#\n#############################################################################################\n\nif error_flag == 0:\n    if payload and \"$prompt\" not in payload.lower():\n        SAS.logMessage(\"Missing $prompt in your request body.\", \"ERROR\")\n        error_flag = 1\n    try:\n        json.loads(payload)\n    except Exception as e:\n        SAS.logMessage(\"Malformed JSON request body.\", \"ERROR\")\n        SAS.logMessage(str(e), \"ERROR\")\n        error_flag = 1\n\n#############################################################################################\n#\n#  Validate filepath of JSON headers if applicable.\n#\n#############################################################################################\n\nif error_flag == 0:\n    if headers_filepath and \"sasserver:\" in headers_filepath.lower() and (headers_filepath.lower().endswith(\".txt\") or headers_filepath.lower().endswith(\".json\")):\n        file_path = headers_filepath.split(\"sasserver:\")[1]\n        try:\n            headers_file = open(file_path)\n            headers = json.load(headers_file)\n        except Exception as e:\n            SAS.logMessage(\"Cannot parse JSON request headers file.\", \"ERROR\")\n            SAS.logMessage(str(e), \"ERROR\")\n            error_flag = 1\n    elif headers_filepath:\n        SAS.logMessage(\"Please select a valid JSON file (.txt or .json) from SAS Server system path.\", \"ERROR\")\n        error_flag = 1\n            \n#############################################################################################\n#\n#  Format Payload\n#\n#############################################################################################\n\ndef format_payload(payload_str, prompt_str, task_str, input_str, context_str):\n    prompt_str = re.sub('\\$input', input_str, prompt_str , flags=re.IGNORECASE)\n    prompt_str = re.sub('\\$context', context_str, prompt_str , flags=re.IGNORECASE)\n    prompt_str = re.sub('\\$task', task_str, prompt_str , flags=re.IGNORECASE)\n    prompt_str = prompt_str.replace('\"', '\\\\\"')\n    final_payload = re.sub('\\$prompt', prompt_str, payload_str , flags=re.IGNORECASE)\n    return final_payload\n\n#############################################################################################\n#\n#  Send POST request\n#\n#############################################################################################\n\nasync def get_response(session, url, payload):\n    async with session.post(url, json=json.loads(payload)) as resp:    \n        return await resp.json()\n\n#############################################################################################\n#\n#  Obtain values from UI - Part 2\n#\n#############################################################################################\nif input_source and input_source == \"table\":\n    input_table_name = SAS.symget(\"llms_input_table\")\n    input_table = SAS.sd2df(input_table_name)\n    input_table_key = SAS.symget(\"llms_input_key\")\n    input_table_text = SAS.symget(\"llms_input_text\")\nelif input_source and input_source == \"enter\":\n    input = SAS.symget(\"llms_input_textarea\")\nelse:\n    input = '';\n\nif context_source and context_source == \"enter\":\n    context = SAS.symget(\"llms_context_textarea\")\nelse:\n    context = '';\n\n#############################################################################################\n#\n#  Main function\n#\n#############################################################################################\n\nasync def main():\n\n    #############################################################################################\n    #\n    #  Create a HTTP client session\n    #\n    #############################################################################################\t\n    async with aiohttp.ClientSession(trust_env=True, headers=headers) as session:        \n        if input_source and input_source == \"table\":\n            input_table[\"payload\"] = input_table.apply(\n                lambda row: format_payload(\n                    payload, prompt, task, row[input_table_text], context\n                ),\n                axis=1,\n            )\n            calls = input_table.apply(lambda row: asyncio.ensure_future(get_response(session, api_endpoint, row[\"payload\"])), axis=1).to_list()\n        else:\n            final_payload = format_payload(payload, prompt, task, input, context)\n            calls = [asyncio.ensure_future(get_response(session, api_endpoint, final_payload))]\n\n        #########################################################################################\n        #\n        #  Waits for all responses\n        #\n        #########################################################################################\n        all_resps = await asyncio.gather(*calls)\n\n        #########################################################################################\n        #\n        #  Saves json output to tmp directory\n        #\n        #########################################################################################\n        date_time = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\").replace(\" \", \"_\")\n        temp_output_file = f\"/tmp/{date_time}_output.json\"\n\n        try:\n            with open(temp_output_file, \"w\") as f:\n                json.dump(all_resps, f)\n            SAS.symput(\"_llms_output_file\", temp_output_file)\n        except Exception as e:\n            error_flag = 1\n            SAS.logMessage(str(e), \"ERROR\")\n\n\n#############################################################################################\n#\n#  Start if no errors\n#\n#############################################################################################\nif error_flag == 0:\n    try:\n        asyncio.run(main())\n    except Exception as e:\n        error_flag = 1\n        SAS.logMessage(str(e), \"ERROR\")\n    finally:\n        if error_flag == 1:\n            SAS.symput(\"_llms_error_flag\", 1)\n\nendsubmit;\nquit;\n\n\n/*-----------------------------------------------------------------------------------------*\n   Print final results if no errors\n*------------------------------------------------------------------------------------------*/\ndata _null_;\n\tif int(&_llms_error_flag) = 0 then do;\n\t\tlibname jlib clear;\n\t\tfilename out \"&_llms_output_file\";\n\t\tlibname jlib json fileref=out;\n\t\tput \"NOTE: Please find the results in the JLIB SAS Library.\";\n\tend;\nrun;\n\n\n/*-----------------------------------------------------------------------------------------*\n   Clean up existing macro variables and macro definitions.\n*------------------------------------------------------------------------------------------*/\n%symdel _llms_run_trigger;\n%symdel _llms_error_flag;\n%symdel _llms_output_file;\n\n\n"}}